apply plugin: 'com.android.application'
apply plugin: 'jacoco'
apply plugin: 'org.jetbrains.kotlin.android'

jacoco {
    toolVersion = "0.8.5"
}

// Gradle task to debug unit testing with code coverage:
task debugUnitTestWithCoverage(type: JacocoReport,
        dependsOn: 'testDebugUnitTest') {
    group = "Reporting"
    description = "Generate Jacoco coverage reports"
    reports {
        xml.enabled = true
        html.enabled = true
    }
    def fileFilter = [
            '**/R.class',
            '**/R$*.class',
            '**/BuildConfig.*',
            '**/Manifest*.*',
            'android/**/*.*'
    ]

    println "******************${buildDir}"
    println "******************${project.projectDir}"

    def debugTree =
            fileTree(dir:
                    "${buildDir}/intermediates/javac" +
                            "/debug/" +
                            "compileDebugJavaWithJavac" +
                            "/classes",
                    excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/java"
    sourceDirectories.from = files([mainSrc])
    classDirectories.from = files([debugTree])
    executionData.from = fileTree(dir: project.projectDir, includes:['**/*.exec' , '**/*.ec'])
}

android {
    compileSdkVersion 33
    defaultConfig {
        applicationId "com.example.jonathan.webjsonviewer"
        minSdkVersion 28
        targetSdkVersion 33
        versionCode = 1
        versionName = (new java.text.SimpleDateFormat("yy.MM.dd-HHmm")).format(new Date()) +
                "-" + "git rev-parse HEAD".execute().text.trim().substring(0,7)

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        debugSigningConfig {
            storeFile file(project.gradle.gradleUserHomeDir.parent + "/.android/debug.keystore")
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }

    // Apk file name. Make sure length <= 127:
    applicationVariants.all { variant ->
        variant.outputs.all {
            def project = "wjv"
            def SEP = "-"
            def variantName = variant.name
            def versionCode = defaultConfig.versionCode
            def versionName = defaultConfig.versionName

            def newApkName = project + SEP +
                    variantName + SEP +
                    versionCode + SEP +
                    versionName + ".apk"

            outputFileName = new File(newApkName)
        }
    }

    buildTypes {
        debug {
            // By default:
            applicationIdSuffix ".debug"
            debuggable true
            // Commented out for building on CircleCI:
            signingConfig signingConfigs.debugSigningConfig
        }
        release {
            // By default:
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            // Commented out for building on CircleCI:
            signingConfig signingConfigs.debugSigningConfig
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.1'

    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.1.0'

    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'org.jetbrains:annotations:16.0.2'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'androidx.core:core-ktx:+'
    testImplementation 'junit:junit:4.13.1'
}